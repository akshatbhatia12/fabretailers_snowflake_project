--IN THIS WORKSHEET WE WILL BE CREATING ALL THE SECURE VIEW THAT WE REQUIRE TO SHARE OR USE IT IS OUR DASHBOARD

--finance department
use database fab_retailers;
use schema finance;
use role finance_role;

--CHECKING WHETHER ANY SECURE VIEW HAS TO BE MADE FROM THE TABLE
--FOR FINANCE DEPARTMENT,NO
select * from finance.finance_expenses_final;
select * from finance.revenue_final;


--sales department
use role sales_marketing_role;
use database fab_retailers;
use schema sales_marketing;
use warehouse sales_marketing_warehouse;

--CHECKING WHETHER ANY SECURE VIEW HAS TO BE MADE FROM THE TABLE
select * from sales_marketing.marketing_campaign_final;
select * from sales_marketing.store_locations_final;
select * from sales_marketing.store_sales_final;

--use fab admin role
--use shared schema
use role fab_admin;
use schema shared;

--a SECURE VIEW STORE_JOINED-  JOIN LOCATIONS TABLE AND STORE SALES TABLE SO THAT THE COMBINED DATA CAN BE SHARED WITH END USER WHO REQUIRE THIS DATA 

create or replace secure view SALES_MARKETING_STORE_JOINED
AS
(
SELECT SALE.*,LOC.CITY,LOC.CONTACT_INFO,LOC.EXTENSION,LOC.REGION,LOC.STORE_MANAGER,LOC.STORE_NAME FROM SALES_MARKETING.STORE_SALES_FINAL SALE 
LEFT JOIN SALES_MARKETING.STORE_LOCATIONS_FINAL LOC ON SALE.STORE_ID=LOC.STORE_ID
);

--A SECURE VIEW STORE PERFORMANCE- TO GET AN OVERALL VIEW OF HOW THE STORE IS PERFORMING, USEFUL FOR DASHBOARD AND SUBSIDIARY COMPANY

CREATE OR REPLACE SECURE VIEW STORE_PERFORMANCE_VIEW AS (
SELECT LOC.STORE_ID,LOC.CITY,LOC.STORE_MANAGER,LOC.STORE_NAME,LOC.CONTACT_INFO,LOC.EXTENSION,SUM(REV.REVENUE_AMOUNT) AS TOTAL_REVENUE,SUM(SALE.TOTAL_SALE) AS TOTAL_SALE FROM FINANCE.REVENUE_FINAL REV 
LEFT JOIN 
SALES_MARKETING.STORE_LOCATIONS_FINAL LOC ON REV.STORE_ID=LOC.STORE_ID
LEFT JOIN 
SALES_MARKETING.STORE_SALES_FINAL SALE ON SALE.STORE_ID=REV.STORE_ID 
GROUP BY LOC.STORE_ID,LOC.CITY,LOC.STORE_MANAGER,LOC.STORE_NAME,LOC.CONTACT_INFO,LOC.EXTENSION
ORDER BY STORE_ID);
